<?php

namespace App\Console\Commands;

use App\Models\User;
use App\Models\ListenerLog;
use App\Http\Controllers\NotificationController;
use Carbon\Carbon;
use Illuminate\Console\Command;
use Illuminate\Support\Facades\Log;
use Illuminate\Http\Request;

class SeasonalGreetings extends Command
{
    protected $signature = 'greetings:seasonal {--occasion=}';
    protected $description = 'Send seasonal greetings to all users';

    protected $notificationController;

    public function __construct(NotificationController $notificationController)
    {
        parent::__construct();
        $this->notificationController = $notificationController;
    }

    public function handle()
    {
        $startTime = microtime(true);
        $occasion = $this->option('occasion');
        
        Log::info("SeasonalGreetings: DÃ©but des vÅ“ux saisonniers - Occasion: $occasion");

        try {
            $users = User::all();

            if ($users->isEmpty()) {
                $message = "Aucun utilisateur trouvÃ©";
                Log::warning("SeasonalGreetings: $message");
                $this->logExecution('skipped', $message, [], $startTime);
                return 0;
            }

            $notificationsSent = 0;

            foreach ($users as $user) {
                $messageData = $this->getGreetingMessage($user->language, $occasion);
                
                $request = new Request([
                    'recipient_id' => $user->id,
                    'subject' => $messageData['subject'],
                    'message' => $messageData['message']
                ]);
                
                $this->notificationController->send($request);
                $notificationsSent++;
                
                Log::info("SeasonalGreetings: VÅ“ux $occasion envoyÃ©s Ã  {$user->name} (ID: {$user->id})");
            }

            $message = "VÅ“ux $occasion envoyÃ©s Ã  $notificationsSent utilisateur(s)";
            Log::info("SeasonalGreetings: $message");
            $this->logExecution('success', $message, ['occasion' => $occasion, 'notifications_sent' => $notificationsSent], $startTime);

            return 0;
        } catch (\Exception $e) {
            $message = "Erreur lors de l'envoi des vÅ“ux saisonniers: " . $e->getMessage();
            Log::error("SeasonalGreetings: $message");
            $this->logExecution('failed', $message, ['error' => $e->getTraceAsString()], $startTime);
            return 1;
        }
    }

    private function getGreetingMessage($language, $occasion)
    {
        $messages = [
            'labor-day' => [
                'fr' => [
                    'subject' => 'Joyeuse FÃªte du Travail',
                    'message' => 'Joyeuse FÃªte du Travail ! Nous vous remercions pour votre dÃ©vouement et votre contribution Ã  la croissance de notre entreprise. Ensemble, nous continuons de bÃ¢tir un avenir prospÃ¨re.'
                ],
                'en' => [
                    'subject' => 'Happy Labor Day',
                    'message' => 'Happy Labor Day! We thank you for your dedication and contribution to our company\'s growth. Together, we continue to build a prosperous future.'
                ]
            ],
            'christmas' => [
                'fr' => [
                    'subject' => 'Joyeux NoÃ«l',
                    'message' => 'Joyeux NoÃ«l ! Merci pour votre travail exceptionnel cette annÃ©e. Que cette pÃ©riode de fÃªtes vous apporte joie et bonheur, et que l\'annÃ©e Ã  venir soit pleine de succÃ¨s pour notre entreprise.'
                ],
                'en' => [
                    'subject' => 'Merry Christmas',
                    'message' => 'Merry Christmas! Thank you for your exceptional work this year. May this holiday season bring you joy and happiness, and may the coming year be full of success for our company.'
                ]
            ],
            'new-year' => [
                'fr' => [
                    'subject' => 'Bonne AnnÃ©e',
                    'message' => 'Bonne AnnÃ©e ! Nous vous remercions pour tout le travail accompli et nous nous rÃ©jouissons de poursuivre ensemble cette belle aventure entrepreneuriale. Que cette nouvelle annÃ©e soit synonyme de croissance et de rÃ©ussite pour notre entreprise.'
                ],
                'en' => [
                    'subject' => 'Happy New Year',
                    'message' => 'Happy New Year! We thank you for all the work accomplished and we look forward to continuing this beautiful entrepreneurial adventure together. May this new year be synonymous with growth and success for our company.'
                ]
            ],
            'april-fools' => [
                'fr' => [
                    'subject' => 'Prime SpÃ©ciale - Poisson d\'Avril',
                    'message' => 'FÃ©licitations ! Vous avez reÃ§u une prime spÃ©ciale de 20 000 FCFA ! ðŸŽ‰... Poisson d\'Avril ! ðŸ˜„ Merci pour votre bonne humeur et votre travail qui contribuent Ã  l\'atmosphÃ¨re positive de notre entreprise.'
                ],
                'en' => [
                    'subject' => 'Special Bonus - April Fools',
                    'message' => 'Congratulations! You have received a special bonus of 20,000 FCFA! ðŸŽ‰... April Fools! ðŸ˜„ Thank you for your good humor and work that contribute to the positive atmosphere of our company.'
                ]
            ]
        ];

        return $messages[$occasion][$language] ?? $messages[$occasion]['fr'];
    }

    private function logExecution($status, $message, $details, $startTime)
    {
        ListenerLog::create([
            'listener_name' => 'SeasonalGreetings',
            'status' => $status,
            'message' => $message,
            'details' => $details,
            'executed_at' => Carbon::now('Africa/Douala'),
            'execution_time' => microtime(true) - $startTime
        ]);
    }
}
